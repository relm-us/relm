{
	"info": {
		"_postman_id": "149295ca-e874-40b1-8f02-dd23378556b8",
		"name": "Relm Server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "List My Permissions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relms\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/auth/permissions",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"auth",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Connect (Email/Password)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/auth/connect/local/signin",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"auth",
								"connect",
								"local",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign Up (Email/Password)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/auth/connect/local/signup",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"auth",
								"connect",
								"local",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Identity",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"identity\": {\r\n        \"name\": \"\",\r\n        \"color\": \"#ffffff\",\r\n        \"showVideo\": true,\r\n        \"showAudio\": true,\r\n        \"status\": \"idle\",\r\n        \"appearance\": {\r\n            \"genderSlider\": 0,\r\n            \"widthSlider\": 0,\r\n            \"beard\": false,\r\n            \"belt\": false,\r\n            \"hair\": \"bald\",\r\n            \"top\": 0,\r\n            \"bottom\": 0,\r\n            \"shoes\": 0,\r\n            \"skinColor\": \"#ffffff\",\r\n            \"hairColor\": \"#ffffff\",\r\n            \"topColor\": \"#ffffff\",\r\n            \"bottomColor\": \"#ffffff\",\r\n            \"beltColor\": \"#ffffff\",\r\n            \"shoeColor\": \"#ffffff\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/auth/identity",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"auth",
								"identity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Identity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverUrl}}/auth/identity",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"auth",
								"identity"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Authenticate (Admin)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/admin/authenticate?t=setup",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"admin",
								"authenticate"
							],
							"query": [
								{
									"key": "t",
									"value": "setup",
									"description": "Token"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Make Admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"participantId\": \"0dce4601-0a92-4c52-ad4a-f355ede669c6\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/admin/mkadmin",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"admin",
								"mkadmin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Inventory",
			"item": [
				{
					"name": "Take Item",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"default\",\n    \"entityId\": \"M6OcSdDQ4vyAtykqXOMof\",\n    \"yCenter\": 1.97\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/asset/inventory/take",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"asset",
								"inventory",
								"take"
							]
						},
						"description": "Removes an item with `entityId` from the relm given by `relmName`, and places it in the participant's inventory. Note that `entityId` is the same as the object's `ID` in the build mode `Modify` panel.\n\nThe `yCenter` value is an optional number that indicates the vertical center of the entity, relative to the base of the participant's avatar (i.e. \"the ground\"). The `yCenter` is used when the `/asset/inventory/drop` command is used, to place it at approximately the same height as when it was taken.\n\nIt's important to capture the `asset`'s `assetId` returned by this call, if you would like to `drop` the item later (otherwise, you will need to `/asset/inventory/query` for it)."
					},
					"response": []
				},
				{
					"name": "Drop Item",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"default\",\n    \"assetId\": \"24492b72-f125-42b3-a657-ef8c6679975e\",\n    \"position\": [0.0, 0.0, 9.1]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/asset/inventory/drop",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"asset",
								"inventory",
								"drop"
							]
						},
						"description": "If the asset is in the participant's inventory, drop it into the relm given by `relmName`. The `assetId` is a UUID provided by the server at the time the item was taken via `/asset/inventory/take`. It can also be retrieved with a call to `/asset/inventory/query`.\n\nThe `position` argument is an array containing `x`, `y`, and `z` coordinates at which the item should be dropped. Note that the `yCenter` value provided at the call to `/asset/inventory/take` will be used to adjust the `y` value here."
					},
					"response": []
				},
				{
					"name": "Query Inventory Items",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"page\": 0,\n    \"perPage\": 100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/asset/inventory/query",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"asset",
								"inventory",
								"query"
							]
						},
						"description": "Query for items in the participant's inventory. This query is similar to the `/asset/library/query` API and similarly accepts an optional `keywords` array of strings and an optional `tags` array of strings."
					},
					"response": []
				}
			]
		},
		{
			"name": "Asset Library",
			"item": [
				{
					"name": "Add Library Asset",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"name\": \"Stout Green Tree\",\n  \"description\": \"A wide green oak tree\",\n  \"tags\": [\"furniture\"],\n  \"thumbnail\": \"2a2545dd9143ebffcef254f010c9a5c3-2502.webp\",\n  \"ecsProperties\": {\n    \"entities\": [\n      {\n        \"id\": \"CicA59maCFvhPHm2rvCIq\",\n        \"name\": \"Thing\",\n        \"parent\": null,\n        \"children\": [],\n        \"meta\": {},\n        \"Transform\": {\n          \"position\": [ -0.10751120293617794, 5.69, -9.739551020349131 ],\n          \"rotation\": [ 0, 0.19376653496242194, 0, 0.9810476695495772 ],\n          \"scale\": [ 12, 12, 12 ]\n        },\n        \"Model\": {\n          \"asset\": {\n            \"name\": \"\",\n            \"filename\": \"\",\n            \"url\": \"c81ffa043ec48dbfd92505126bdbb9fa-283272.glb\"\n          }\n        },\n        \"RigidBody\": {\n          \"kind\": \"STATIC\",\n          \"linearVelocity\": [ 0, 0, 0 ],\n          \"angularVelocity\": [ 0, 0, 0 ],\n          \"mass\": 1,\n          \"angularDamping\": 0,\n          \"linearDamping\": 0\n        },\n        \"Collider\": {\n          \"shape\": \"CYLINDER\",\n          \"boxSize\": [ 1, 1, 1 ],\n          \"sphereRadius\": 0.5,\n          \"cylinderRadius\": 0.12999,\n          \"cylinderHeight\": 1,\n          \"capsuleRadius\": 0.5,\n          \"capsuleHeight\": 1,\n          \"offset\": [ 0.04, 0, 0.0399 ],\n          \"density\": 1,\n          \"interaction\": 65543\n        }\n      }\n    ]\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/asset/library/create",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"asset",
								"library",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify Library Asset",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"assetId\": \"bd5f9ea5-299f-4e1e-90cc-b1e079f94fbf\",\n  \"name\": \"Stout Oak Tree\",\n  \"description\": \"A pleasant oak tree\",\n  \"tags\": [\"nature\", \"tree\"]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/asset/library/update",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"asset",
								"library",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Library Asset",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"assetId\": \"42512d9b-44f1-406e-ad5b-9f8c2e942020\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/asset/library/delete",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"asset",
								"library",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query Library Assets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"keywords\": [\"tree\"],\n    \"tags\": [\"nature\"],\n    \"page\": 0,\n    \"per_page\": 100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/asset/library/query",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"asset",
								"library",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Asset Binary Data",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "files[]",
									"type": "file",
									"src": "/home/duane/tmp/skyboxes/skybox-bluesky.webp"
								}
							]
						},
						"url": {
							"raw": "{{serverUrl}}/asset/upload",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"asset",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset (no CDN)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverUrl}}/asset/052ae126b79707f97c83b447805f32ea.jpg",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"asset",
								"052ae126b79707f97c83b447805f32ea.jpg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset (from CDN)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://assets.ourrelm.com/052ae126b79707f97c83b447805f32ea.jpg",
							"protocol": "https",
							"host": [
								"assets",
								"ourrelm",
								"com"
							],
							"path": [
								"052ae126b79707f97c83b447805f32ea.jpg"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Invitations",
			"item": [
				{
					"name": "Make Invitation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"default\",\n    \"maxUses\": 3,\n    \"permits\": [\"access\", \"edit\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/invite/make",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"invite",
								"make"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Invitation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"default\",\n    \"token\": \"welcome1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/invite/delete",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"invite",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Invitations by Relm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"default\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/invite/query",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"invite",
								"query"
							],
							"query": [
								{
									"key": "token",
									"value": "welcome1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Relm",
			"item": [
				{
					"name": "Create Relm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/create",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"create"
							]
						},
						"description": "Create a relm.\n\n```\n\"relmName\": string\n\"publicPermits\": permission array\n\"clonePermitRequired\": \"read\" | \"access\" | \"edit\" | null\n\"clonePermitAssigned\": \"access\" | \"edit\" | null\n```\n\n## Params\n\n`relmName` is required. It can include numbers, letters of the alphabet, `-` (dash), or `/` (slash).\n\n`publicPermits` is optional, and defines the permissions that will be granted to a public user. For example: `[\"access\"]` would grant the public permission to access the relm (\"play mode\").\n\n`clonePermitRequired` is optional, and tells the server what level of permission is required to clone the relm. For example `read` permission means the user would at least need \"read\" permission.\n\n`clonePermitAssigned` is optional (unless `clonePermitRequired` is given, in which case `clonePermitAssigned` is required). Tells the server what the assigned permits will be for the participant that clones the relm. For example `edit` would mean the participant will have `edit` (build-mode) permission in the cloned relm."
					},
					"response": []
				},
				{
					"name": "Clone Relm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"myrelm\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/clone",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"clone"
							]
						},
						"description": "Creates a new subrelm by cloning the base relm. The new subrelm can be named using the value `subrelmName`; if it is not named, it will create a random token as the name.\n\nNote that whether or not this action is permitted depends upon the base relm's `clonePermitRequired` setting. If it is set to \"access\", then the participant calling the `/relm/[relmName]/new` API endpoint must at least have \"access\" permission to `[relmName]`.\n\nThe participant will be granted `clonePermitAssigned` permission to the new relm. `clonePermitAssigned` is also defined on the relm (not during this API call)."
					},
					"response": []
				},
				{
					"name": "Delete Relm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"myrelm\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/delete",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Relm Permissions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"myrelm\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/permits",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"permits"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Relm Content",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"myrelm\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/content",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"content"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Relm Content",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"myrelm\",\n    \"actions\": [\n        {\n          \"type\": \"setProperty\",\n          \"entity\": \"Stq3SsT0TnkzAbhALNM47\",\n          \"component\": \"Transform\",\n          \"property\": \"position\",\n          \"value\": [ 0, 0.6, -2.7 ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/edit",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"edit"
							]
						},
						"description": "Edits the content of a relm using the `actions` system. Note that this is primarily useful as to modify the content of the world via API. It cannot be used to change relms' metadata (see `Set Relm Metadata`)."
					},
					"response": []
				},
				{
					"name": "Get Relm Metadata",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/getmeta",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"getmeta"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Relm Metadata",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"\",\n    \"publicPermits\": [],\n    \"clonePermitRequired\": \"read\",\n    \"clonePermitAssigned\": \"edit\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/setmeta",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"setmeta"
							]
						},
						"description": "Metadata about the relm:\n\n```\n\"relmName\": string\n\"isPublic\": boolean\n\"clonePermitRequired\": \"access\" | \"edit\" | null\n\"clonePermitAssigned\": \"access\" | \"edit\" | null\n```"
					},
					"response": []
				},
				{
					"name": "Get Variables",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"myrelm\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/getvars",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"getvars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Variables",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"relmName\": \"myrelm\",\n    \"changes\": {\n        \"set\": {\n            \"door\": \"open\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relm/setvars",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relm",
								"setvars"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Relms",
			"item": [
				{
					"name": "List Public Relms",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverUrl}}/relms/public",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relms",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Relms (Admin)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverUrl}}/relms/all?includeEmpty=1",
							"host": [
								"{{serverUrl}}"
							],
							"path": [
								"relms",
								"all"
							],
							"query": [
								{
									"key": "includeEmpty",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Screenshot",
			"item": [
				{
					"name": "Get Website Screenshot",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({ ",
					"    key: \"x-relm-participant-id\",",
					"    value: postman.getEnvironmentVariable(\"participantId\")",
					"});",
					"",
					"pm.request.headers.add({ ",
					"    key: \"x-relm-participant-sig\",",
					"    value: postman.getEnvironmentVariable(\"participantSig\")",
					"});",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}